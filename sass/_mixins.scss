/* --------------------------------------------------------
    CONTENTS - MIXINS
    ---
    ANIMATION ........................ Mixin for easier animations
    GRADIENTS ........................ Mixin for easier gradients
    ICON ............................. Mixin for easier square icons
    OPACITY .......................... Mixin for easier opacity
    VENDOR PREFIXING ................. Mixin for easier vendor prefixing
-------------------------------------------------------- */

/* --------------------------------------------------------
    ANIMATION
    ---
    Usage example:

    @include animation(fadeInUp, 500ms, 200ms, ease, forward);
-------------------------------------------------------- */

@mixin animation($name, $duration, $delay, $timing, $direction){
    @include vendor(animation-name, $name);
    @include vendor(animation-duration, $duration);
    @include vendor(animation-delay, $delay);
    @include vendor(animation-iteration-count, $timing);
    @include vendor(animation-fill-mode, $direction);
}

/* --------------------------------------------------------
    GRADIENTS
    ---
    Usage example:

    @include gradient(white, black);
-------------------------------------------------------- */

@mixin gradient($from, $to) {
    background-color: $from;
    background-image: -moz-linear-gradient($from, $to);
    background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from($from), to($to));
    background-image: -webkit-linear-gradient($from, $to);
    background-image: -o-linear-gradient($from, $to);
    background: linear-gradient(to bottom,  $from 0%, $to 100%);
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='$from', endColorstr='#$to',GradientType=0 );
}

/* --------------------------------------------------------
    ICON
    ---
    Generic square icon mixin
    Usage example:

    @include vendor(20px, anchor);

    * Icons MUST be .png
    * Icons MUST be placed in `/images/icons` folder
-------------------------------------------------------- */

@mixin icon($size, $filename) {
    display: block;
    width: $size;
    height: $size;
    background-image: url('/design/images/icons/#{$filename}.png');
    background-siz: $size;
}

/* --------------------------------------------------------
    OPACITY
    ---
    Usage example:

    @include opacity(0.8);
-------------------------------------------------------- */

@mixin opacity($opacity) {
    opacity: $opacity;
    $opacity-ie: $opacity * 100;
    filter: alpha(opacity=$opacity-ie); //IE8
}

/* --------------------------------------------------------
    VENDOR PREFIXING
    ---
    Usage example:

    @include vendor(background-size, cover);
-------------------------------------------------------- */

@mixin vendor($property, $value...) {
    -webkit-#{$property}: $value;
    -moz-#{$property}: $value;
    #{$property}: $value;
}

/* --------------------------------------------------------
    Triangle
    ---
--------------------------------------------------------- */
@mixin triangle($size, $color, $direction) {
  $width: nth($size, 1);
  $height: nth($size, length($size));
  $foreground-color: nth($color, 1);
  $background-color: if(length($color) == 2, nth($color, 2), transparent);
  height: 0;
  width: 0;

  @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {
    $width: $width / 2;
    $height: if(length($size) > 1, $height, $height/2);

    @if $direction == up {
      border-bottom: $height solid $foreground-color;
      border-left: $width solid $background-color;
      border-right: $width solid $background-color;
    } @else if $direction == right {
      border-bottom: $width solid $background-color;
      border-left: $height solid $foreground-color;
      border-top: $width solid $background-color;
    } @else if $direction == down {
      border-left: $width solid $background-color;
      border-right: $width solid $background-color;
      border-top: $height solid $foreground-color;
    } @else if $direction == left {
      border-bottom: $width solid $background-color;
      border-right: $height solid $foreground-color;
      border-top: $width solid $background-color;
    }
  } @else if ($direction == up-right) or ($direction == up-left) {
    border-top: $height solid $foreground-color;

    @if $direction == up-right {
      border-left:  $width solid $background-color;
    } @else if $direction == up-left {
      border-right: $width solid $background-color;
    }
  } @else if ($direction == down-right) or ($direction == down-left) {
    border-bottom: $height solid $foreground-color;

    @if $direction == down-right {
      border-left:  $width solid $background-color;
    } @else if $direction == down-left {
      border-right: $width solid $background-color;
    }
  } @else if ($direction == inset-up) {
    border-color: $background-color $background-color $foreground-color;
    border-style: solid;
    border-width: $height $width;
  } @else if ($direction == inset-down) {
    border-color: $foreground-color $background-color $background-color;
    border-style: solid;
    border-width: $height $width;
  } @else if ($direction == inset-right) {
    border-color: $background-color $background-color $background-color $foreground-color;
    border-style: solid;
    border-width: $width $height;
  } @else if ($direction == inset-left) {
    border-color: $background-color $foreground-color $background-color $background-color;
    border-style: solid;
    border-width: $width $height;
  }
}